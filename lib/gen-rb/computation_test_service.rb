#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'computation_service'
require 'bolt_types'

module Concord
  module Thrift
    module ComputationTestService
      class Client < ::Concord::Thrift::ComputationService::Client 
        include ::Thrift::Client

        def boltMetrics()
          send_boltMetrics()
          return recv_boltMetrics()
        end

        def send_boltMetrics()
          send_message('boltMetrics', BoltMetrics_args)
        end

        def recv_boltMetrics()
          result = receive_message(BoltMetrics_result)
          return result.success unless result.success.nil?
          raise result.e unless result.e.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'boltMetrics failed: unknown result')
        end

      end

      class Processor < ::Concord::Thrift::ComputationService::Processor 
        include ::Thrift::Processor

        def process_boltMetrics(seqid, iprot, oprot)
          args = read_args(iprot, BoltMetrics_args)
          result = BoltMetrics_result.new()
          begin
            result.success = @handler.boltMetrics()
          rescue ::Concord::Thrift::BoltError => e
            result.e = e
          end
          write_result(result, oprot, 'boltMetrics', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class BoltMetrics_args
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class BoltMetrics_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        E = 1

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::MAP, :name => 'success', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
          E => {:type => ::Thrift::Types::STRUCT, :name => 'e', :class => ::Concord::Thrift::BoltError}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
